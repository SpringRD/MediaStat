<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/24/2020 7:24:18 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PC5"
  DTS:CreatorName="DOMAIN\z2"
  DTS:DTSID="{BCFA1752-388B-4BE7-8BB6-65861398AEE2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="1033"
  DTS:ObjectName="ImportTweetsFromMongoPackage"
  DTS:PackageType="5"
  DTS:VersionBuild="86"
  DTS:VersionGUID="{BABC413A-B36C-4F12-87DB-1DE34F885BF1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DB_CONN_TwitterRawData]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{EA69FD16-595A-4341-A2A3-05F27F081C07}"
      DTS:ObjectName="DB_CONN_TwitterRawData">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=MediaStat;Integrated Security=True;Application Name=SSIS-Package1-{EA69FD16-595A-4341-A2A3-05F27F081C07}DESKTOP-9EC700P\MSSQLSERVER01.TwitterRawData;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C28AAD95-B11E-4428-9CB9-55008DC469FB}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::SourceFolder] + "\\" +   @[User::FileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="65001"
          DTS:ConnectionString="\Tweets.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Profile Name"
              DTS:DTSID="{D181249B-0870-4E88-A1DC-0F17A932E4D9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Location"
              DTS:DTSID="{FA87A7F2-614B-432E-B43B-6407EB443EE4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="URL"
              DTS:DTSID="{A50E7FE9-95F6-43BE-8915-219A73BB63FF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Id"
              DTS:DTSID="{0AA9CEA9-B983-4B54-BD9C-25F4CFD7D92D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Description"
              DTS:DTSID="{624529E9-BAF5-4D16-B722-8D2FA8BB1F68}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="UnKnown"
              DTS:DTSID="{BA9897B6-E8BC-4C9D-B9AA-787714C61077}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Screen Name"
              DTS:DTSID="{A113BA58-8D93-4113-8D31-D79355C35065}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="18"
              DTS:TextQualified="True"
              DTS:ObjectName="Followers"
              DTS:DTSID="{EF616863-AD4E-40FF-A178-652D11102041}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Image Url"
              DTS:DTSID="{EE03EC63-CDD1-4810-9B77-043B86D546BB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="18"
              DTS:TextQualified="True"
              DTS:ObjectName="Following"
              DTS:DTSID="{631351BE-5A66-4168-9FCB-8ABEAA1B92BA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="Joined"
              DTS:DTSID="{B06DB981-F385-4BDC-9E00-6AE7E6F30221}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Pc5.Test11 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5DE98138-4035-4C7E-9D51-849DC624D1FD}"
      DTS:ObjectName="Pc5.Test11 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=MediaStat;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{62C7C00D-E5E6-4583-B20A-2CA94E50FEAF}"
      DTS:ObjectName="SourceFolderParam">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\MyUploads\Tweets</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF532548-AB71-4B5F-B874-6894438489FA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\MyUploads\Archive\Tweets</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82F244AF-0CE7-4077-B28B-3F26D60D1C03}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DelayTimerInMs">
      <DTS:VariableValue
        DTS:DataType="3">1000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59270FAC-7745-4EEC-BD4B-FE243CC28794}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationTable">
      <DTS:VariableValue
        DTS:DataType="8">TweetMain</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{64F27FCD-6A10-48E8-9EAD-5FE5A2921B78}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileDelimiter">
      <DTS:VariableValue
        DTS:DataType="8">\t</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0448017C-992A-460B-A520-755F0EF1166E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExtension">
      <DTS:VariableValue
        DTS:DataType="8">.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{90C232E5-D112-42CD-946C-309637460AD1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">Tweets.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{45909344-96FF-4EF5-B6E8-3BB0DBC2BDDB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsFileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8F3BE65F-113C-4012-9F4A-9CE2FCFDF97D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogFolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{72E20D27-EC20-492B-90E2-A573AB13D062}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{8FDC54A2-89B5-4B67-8C23-DAF26DAD23FE}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Profile Name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Profile Name]"
                      length="4000"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Profile Name]"
                      name="Profile Name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Location]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Location]"
                      length="4000"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Location]"
                      name="Location"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[URL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[URL]"
                      length="4000"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[URL]"
                      name="URL"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Id]"
                      length="4000"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Id]"
                      name="Id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Description]"
                      length="4000"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[UnKnown]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[UnKnown]"
                      length="4000"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[UnKnown]"
                      name="UnKnown"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Screen Name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Screen Name]"
                      length="4000"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Screen Name]"
                      name="Screen Name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Followers]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Followers]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Followers]"
                      name="Followers"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Image Url]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Image Url]"
                      length="4000"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Image Url]"
                      name="Image Url"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Following]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Following]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Following]"
                      name="Following"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Joined]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Joined]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Joined]"
                      name="Joined"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Profile Name]"
                      dataType="wstr"
                      length="4000"
                      name="Profile Name" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Location]"
                      dataType="wstr"
                      length="4000"
                      name="Location" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[URL]"
                      dataType="wstr"
                      length="4000"
                      name="URL" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Id]"
                      dataType="wstr"
                      length="4000"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Description]"
                      dataType="wstr"
                      length="4000"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[UnKnown]"
                      dataType="wstr"
                      length="4000"
                      name="UnKnown" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Screen Name]"
                      dataType="wstr"
                      length="4000"
                      name="Screen Name" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Followers]"
                      dataType="numeric"
                      name="Followers"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Image Url]"
                      dataType="wstr"
                      length="4000"
                      name="Image Url" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Following]"
                      dataType="numeric"
                      name="Following"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Joined]"
                      dataType="dbDate"
                      name="Joined" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="65001"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[TweetMain]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[TweetMain]) [refTable]
where [refTable].[TweetSpecialId] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="TweetId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AccountId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Text" dataType="DT_NTEXT" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TweetSpecialId" dataType="DT_WSTR" length="4000" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LikesCount" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RetweetCount" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CommentsCount" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DateId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Pc5.Test11 1]"
                  connectionManagerRefId="Package.ConnectionManagers[Pc5.Test11 1]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Lookup.Inputs[Lookup Input].Columns[Id]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Id"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">TweetSpecialId</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\OLE DB Command"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="OLE DB Command"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update Accounts Set ProfileName = ?, LocationDescription = ?, AccountUrl = ?, Description = ? , ScreenName = ?, Followers = ?, ProfileImageURL = ?, Following = ?, Joined = ? WHERE SpecialAccountId = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\OLE DB Command.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Pc5.Test11 1]"
                  connectionManagerRefId="Package.ConnectionManagers[Pc5.Test11 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Profile Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Profile Name"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Profile Name]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Location]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Location"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Location]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[URL]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="URL"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[URL]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Description"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Description]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Screen Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Screen Name"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Screen Name]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Followers]"
                      cachedDataType="numeric"
                      cachedName="Followers"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Followers]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Image Url]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Image Url"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Image Url]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Following]"
                      cachedDataType="numeric"
                      cachedName="Following"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Following]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Joined]"
                      cachedDataType="dbDate"
                      cachedName="Joined"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Joined]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].Columns[Id]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Id"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Id]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="nText"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="nText"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="nText"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="nText"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="nText"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="i4"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="nText"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="i4"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="dbTimeStamp2"
                      name="Param_8"
                      scale="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      dataType="wstr"
                      length="4000"
                      name="Param_9">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Accounts]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Pc5.Test11 1]"
                  connectionManagerRefId="Package.ConnectionManagers[Pc5.Test11 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Description"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Description]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Followers]"
                      cachedDataType="numeric"
                      cachedName="Followers"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Followers]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Followers]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Following]"
                      cachedDataType="numeric"
                      cachedName="Following"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Following]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Following]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Joined]"
                      cachedDataType="dbDate"
                      cachedName="Joined"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Joined]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Joined]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Profile Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Profile Name"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProfileName]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Profile Name]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Screen Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Screen Name"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ScreenName]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Screen Name]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Id]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Id"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SpecialAccountId]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Id]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Image Url]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Image Url"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProfileImageURL]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Image Url]" />
                    <inputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[URL]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="URL"
                      externalMetadataColumnId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountUrl]"
                      lineageId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[URL]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProfileName]"
                      dataType="nText"
                      name="ProfileName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                      dataType="i4"
                      name="Location" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      dataType="nText"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ScreenName]"
                      dataType="nText"
                      name="ScreenName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Followers]"
                      dataType="i4"
                      name="Followers" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Following]"
                      dataType="i4"
                      name="Following" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Joined]"
                      dataType="dbTimeStamp2"
                      name="Joined"
                      scale="7" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountId]"
                      dataType="i4"
                      name="AccountId" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateOfBirth]"
                      dataType="dbTimeStamp2"
                      name="DateOfBirth"
                      scale="7" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Party]"
                      dataType="i4"
                      name="Party" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountType]"
                      dataType="i4"
                      name="AccountType" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountUrl]"
                      dataType="nText"
                      name="AccountUrl" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Classification1]"
                      dataType="i4"
                      name="Classification1" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Classification2]"
                      dataType="i4"
                      name="Classification2" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Link]"
                      dataType="nText"
                      name="Link" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AllLinks]"
                      dataType="nText"
                      name="AllLinks" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProfileImageURL]"
                      dataType="nText"
                      name="ProfileImageURL" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LocationDescription]"
                      dataType="nText"
                      name="LocationDescription" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SpecialAccountId]"
                      dataType="wstr"
                      length="4000"
                      name="SpecialAccountId" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastChanged]"
                      dataType="dbTimeStamp2"
                      name="LastChanged"
                      scale="7" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Flat File Source Output]"
              endId="Package\Data Flow Task\Lookup.Inputs[Lookup Input]"
              name="Flat File Source Output"
              startId="Package\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup Match Output]"
              endId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\Data Flow Task\Lookup.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Data Flow Task.Paths[Lookup No Match Output]"
              endId="Package\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Data Flow Task\Lookup.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Loop"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="Import Loop"
      DTS:DTSID="{829C98B6-F5BA-4A13-9125-212C66A180B8}"
      DTS:EvalExpression="@[User::IsFileExists] == False"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@[User::IsFileExists] = False"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Import Loop">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Import Loop\Poll file"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Poll file"
          DTS:DTSID="{e711a6e4-2f5d-4c39-9cc5-7ed8081b04cf}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Poll file"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_5da1c40cb8a44e569fce77a33c52b2a1"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ArchiveFolder,User::DelayTimerInMs,User::DestinationTable,User::FileDelimiter,User::FileExtension,User::FileName,User::LogFolder,User::SourceFolder,$Package::SourceFolderParam"
              ReadWriteVariables="User::IsFileExists">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43607b5fe3584a9a868a5e58775d118d.Properties.Settings.get_Default():ST_43607b5fe3584a9a868a5e58775d118d.Properties.Sett" +
    "ings")]

namespace ST_43607b5fe3584a9a868a5e58775d118d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_5da1c40cb8a44e569fce77a33c52b2a1.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{41317205-441E-463E-98E1-03CE58D7CC27}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_43607b5fe3584a9a868a5e58775d118d</RootNamespace><AssemblyName>ST_5da1c40cb8a44e569fce77a33c52b2a1</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Threading;
#endregion

namespace ST_43607b5fe3584a9a868a5e58775d118d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            string strDataFilesLocation;
            string[] strDataFiles;
            Int32 intDelayTimer;
            string strFullFileName;

            intDelayTimer = (Int32)Dts.Variables["User::DelayTimerInMs"].Value;

            strDataFilesLocation = Dts.Variables["User::SourceFolder"].Value.ToString();
            strDataFilesLocation = Dts.Variables["$Package::SourceFolderParam"].Value.ToString();
            Dts.Variables["User::SourceFolder"].Value = strDataFilesLocation;
            strFullFileName = strDataFilesLocation + "\\" + Dts.Variables["User::FileName"].Value.ToString();

            strDataFiles = Directory.GetFiles(strDataFilesLocation);
            if (strDataFiles.Length > 0)
            {
                Dts.Variables["User::IsFileExists"].Value = true;
                //Zein: this was the code before I change the way
                //NO fixed file name now
                //foreach (string _file in strDataFiles)
                //{
                //    if (string.Compare(strFullFileName, _file) == 0)
                //    {
                //        Dts.Variables["User::IsFileExists"].Value = true;
                //    }
                //}

            }
            else
            {
                Thread.Sleep(intDelayTimer);
            }
            //MessageBox.Show("File is not available");

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_7b28bf095ec7470eae39dd342b3d4cf6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_7b28bf095ec7470eae39dd342b3d4cf6</msb:DisplayName>
    <msb:ProjectId>{829FBA34-931D-4E1A-BF19-10A10831FCFD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5da1c40cb8a44e569fce77a33c52b2a1.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="27a2e3ee904241f59ce9b0cdd5482f96">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>101</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_43607b5fe3584a9a868a5e58775d118d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_43607b5fe3584a9a868a5e58775d118d")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43607b5fe3584a9a868a5e58775d118d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43607b5fe3584a9a868a5e58775d118d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_43607b5fe3584a9a868a5e58775d118d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_43607b5fe3584a9a868a5e58775d118d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_43607b5fe3584a9a868a5e58775d118d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_7b28bf095ec7470eae39dd342b3d4cf6.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOWqpl8AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAwi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHAvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAyA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACk
LwAAAAAAAEgAAAACAAUAqCEAABANAAABAAAAAAAAALguAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBADkAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKpRsAAAELAigQAAAKbxEAAApyKwAAcG8SAAAKbxMAAApvFAAACgoCKBAAAApvEQAACnJRAABw
bxIAAApvEwAACm8UAAAKCgIoEAAACm8RAAAKcisAAHBvEgAACgZvFQAACgZyiQAAcAIoEAAACm8R
AAAKco0AAHBvEgAACm8TAAAKbxQAAAooFgAACiYGKBcAAAqOLCICKBAAAApvEQAACnKrAABwbxIA
AAoXjB4AAAFvFQAACisGBygYAAAKAigQAAAKFm8ZAAAKKh4CKBoAAAoqHgIoGwAACiqufgEAAAQt
HnLRAABw0AMAAAIoHAAACm8dAAAKcx4AAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAA
BCoeAigfAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAA9AMAACN+AABgBAAA3AUAACNTdHJpbmdzAAAAADwKAABEAQAAI1VTAIALAAAQAAAAI0dVSUQA
AACQCwAAgAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACIAAAAFAAAABgAA
AAkAAAABAAAAHwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAMsD
AQAAAAAABgBgAqkEBgDvAqkEBgCsAZYEDwAdBQAABgDZAVEEBgBDAlEEBgAkAlEEBgDWAlEEBgCA
AlEEBgCZAlEEBgDwAVEEBgALAjgDCgC0AnoDCgArAXoDBgADBPwDBgCPAZYEBgCgBfwDBgB5BMkE
BgBjBDwEDgBfAbUDDgDAAbUDDgBHAScEBgB0AakECgCjA3oDEgBfBdYAEgCpANYABgABAPwDBgBU
A/wDBgDPBTQABgAUBPwDBgCSACcDBgD2APwDBgCyAPwDBgDGBVEEAAAAACsAAAAAAAEAAQABABAA
HARuADkAAQABAAAAEADQBCwFRQABAAMAAAEQAHIFLAVZAAMABwADAQAAiwUAAD0ABAAKABEACASC
ABEAGwGGABEAmQCKAAYGXQCOAFaAewWRAFaA+wCRAFAgAAAAAIYAIgQGAAEAQCEAAAAAhhiJBAYA
AQBIIQAAAACDGIkEBgABAFAhAAAAAJMIdQSVAAEAfCEAAAAAkwgDAZoAAQCDIQAAAACTCA8BnwAB
AIshAAAAAJYIpwWlAAIAkiEAAAAAhhiJBAYAAgCaIQAAAACRGI8EqgACAAAAAQAhAwkAiQQBABEA
iQQGABkAiQQKACkAiQQQADEAiQQQADkAiQQQAEEAiQQQAEkAiQQQAFEAiQQQAFkAiQQQAGEAiQQQ
AGkAiQQGAIEAiQQGAKkAiQQVALkAiQQGAHEAgwUgAMEAWwUlAMkA8wMqANEADQMwAIkAUgM0ANEA
FwM4AOEAmQU9AOkAaQVEAPkAbwRKAMEAswUBAHEAiQQGAIkAiQQGAAEBxABPAAEBwgVYAJEAiQRe
ALEAiQQGAAgAFAB4AAgAGAB9ACkAcwDlAC4ACwC9AC4AEwDGAC4AGwDlAC4AIwDuAC4AKwAXAS4A
MwAXAS4AOwAXAS4AQwDuAC4ASwAdAS4AUwAXAS4AWwA0AUMAYwB9AEkAcwDlAGEAewB9AGMAawB9
ABsAAwABAAQAAwAAAHkErgAAACMBswAAAKsFuAACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAA
AQAAAMAdwnEAAAAAAAAHAAAABAAAAAAAAAAAAAAAZgBlAAAAAAAPAAAAAAAAAAAAAABvAFsDAAAA
AAQAAAAAAAAAAAAAAGYA/AMAAAAADwAAAAAAAAAAAAAAbwA+AAAAAAAAAAAAAQAAANoEAAAFAAIA
AAAAAABJbnQzMgBTVF83YjI4YmYwOTVlYzc0NzBlYWUzOWRkMzQyYjNkNGNmNgA8TW9kdWxlPgBT
eXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIA
U1RfNDM2MDdiNWZlMzU4NGE5YTg2OGE1ZTU4Nzc1ZDExOGQAVGhyZWFkAGRlZmF1bHRJbnN0YW5j
ZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0
X1ZhbHVlAHZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBU
b1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50
TW9kZWwAU1RfN2IyOGJmMDk1ZWM3NDcwZWFlMzlkZDM0MmIzZDRjZjYuZGxsAGdldF9JdGVtAFN5
c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBT
bGVlcABnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzQzNjA3
YjVmZTM1ODRhOWE4NjhhNWU1ODc3NWQxMThkLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTVF80MzYwN2I1ZmUzNTg0YTlhODY4YTVlNTg3NzVkMTE4ZC5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNj
cmlwdFJlc3VsdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRf
QXNzZW1ibHkARGlyZWN0b3J5AAAAAAApVQBzAGUAcgA6ADoARABlAGwAYQB5AFQAaQBtAGUAcgBJ
AG4ATQBzAAAlVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwAZABlAHIAADckAFAAYQBjAGsA
YQBnAGUAOgA6AFMAbwB1AHIAYwBlAEYAbwBsAGQAZQByAFAAYQByAGEAbQAAA1wAAB1VAHMAZQBy
ADoAOgBGAGkAbABlAE4AYQBtAGUAACVVAHMAZQByADoAOgBJAHMARgBpAGwAZQBFAHgAaQBzAHQA
cwAAcVMAVABfADQAMwA2ADAANwBiADUAZgBlADMANQA4ADQAYQA5AGEAOAA2ADgAYQA1AGUANQA4
ADcANwA1AGQAMQAxADgAZAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAB65ubZcPCFCqCK4cTM9FAAABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEEBwIOCAQgABJh
BCAAEmUFIAESaRwDIAAcAyAADgQgAQEcBgADDg4ODgUAAR0ODgQAAQEICAABEoCBEYCFBSAAEoCJ
ByACAQ4SgIkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQA
ABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzQzNjA3YjVmZTM1ODRhOWE4Njhh
NWU1ODc3NWQxMThkAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAmC8AAAAAAAAAAAAAsi8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AKQvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDCccAdAAABAMJxwB0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADQAMwA2ADAANwBiADUAZgBlADMANQA4ADQAYQA5AGEAOAA2ADgAYQA1AGUANQA4
ADcANwA1AGQAMQAxADgAZAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADYAMQA2AC4AMgA5ADEAMgAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADcAYgAyADgAYgBmADAAOQA1AGUAYwA3ADQANwAwAGUAYQBlADMAOQBkAGQAMwA0ADIA
YgAzAGQANABjAGYANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANwBiADIAOABiAGYAMAA5ADUAZQBjADcANAA3ADAAZQBhAGUAMwA5AGQA
ZAAzADQAMgBiADMAZAA0AGMAZgA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADQAMwA2ADAANwBiADUAZgBlADMANQA4ADQAYQA5AGEAOAA2ADgAYQA1AGUA
NQA4ADcANwA1AGQAMQAxADgAZAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA2ADEANgAuADIAOQAxADIAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA2ADEANgAuADIAOQAxADIAMgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADEPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="101"
                Column="13" />
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{DF3A6722-F3A6-4F50-9334-40BAB7CB43BB}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_22e85da4b686459bb74a5ab1a5a57438"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ArchiveFolder,User::DestinationTable,User::FileDelimiter,User::FileExtension,User::LogFolder,User::SourceFolder,$Package::SourceFolderParam">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.Data.DataSetExtensions" version="4.5.0" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="ST_22e85da4b686459bb74a5ab1a5a57438.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0CCDC219-28A8-496E-A280-A9C68A5E7C04}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f5c32713d3394a0dad85d88527315df7</RootNamespace>
    <AssemblyName>ST_22e85da4b686459bb74a5ab1a5a57438</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Text;
using System.Data.SqlClient;
using System.Text.RegularExpressions;
using System.Linq;
using System.Globalization;
#endregion

namespace ST_7ce5ad6fbc104157b534f4eb484a4417
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        /// 

        DataTable dtAccounts = new DataTable();

        public void Main()
        {
            // TODO: Add your code here

            int lineNumber = 0;
            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
            try
            {

                //Declare Variables
                string SourceFolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
                SourceFolderPath = Dts.Variables["$Package::SourceFolderParam"].Value.ToString();
                Dts.Variables["User::SourceFolder"].Value  = SourceFolderPath;
                string FileExtension = Dts.Variables["User::FileExtension"].Value.ToString();
                string FileDelimiter = Dts.Variables["User::FileDelimiter"].Value.ToString();
                FileDelimiter = FileDelimiter.Replace("\\t", "\t");
                string TableName = Dts.Variables["User::DestinationTable"].Value.ToString();
                string ArchiveFolder = Dts.Variables["User::ArchiveFolder"].Value.ToString();
                string query;

                DataTable dtDates = new DataTable();
                SqlCommand myCommand1;


                //string ColumnList = "";

                //Reading file names one by one
                string SourceDirectory = SourceFolderPath;
                string[] fileEntries = Directory.GetFiles(SourceDirectory, "*" + FileExtension);

                SqlConnection myADONETConnection = new SqlConnection();
                myADONETConnection = (SqlConnection)
                (Dts.Connections["DB_CONN_TwitterRawData"].AcquireConnection(Dts.Transaction) as SqlConnection);


                query = "SELECT [AccountId],[ScreenName],[SpecialAccountId] FROM [MediaStat].[dbo].[Accounts]";
                //myADONETConnection.Open();
                myCommand1 = new SqlCommand(query, myADONETConnection);
                SqlDataReader drAccounts = myCommand1.ExecuteReader(CommandBehavior.CloseConnection);
                dtAccounts.Load(drAccounts);

                query = "SELECT [Id],[DayDate] FROM [MediaStat].[dbo].[TweetDateDim]";
                myADONETConnection.Open();
                myCommand1 = new SqlCommand(query, myADONETConnection);
                SqlDataReader drDates = myCommand1.ExecuteReader(CommandBehavior.CloseConnection);
                dtDates.Load(drDates);

                foreach (string fileName in fileEntries)
                {

                    //Writing Data of File Into Table
                    int counter = 0;
                    string line;
                    string apostrophe = "'";
                    string doubleQoute = "''";
                    string specialCharacter = "﻿";
                    string[] splitedLine;



                    System.IO.StreamReader SourceFile =
                        new System.IO.StreamReader(fileName, System.Text.Encoding.UTF8);
                    while ((line = SourceFile.ReadLine()) != null)
                    {
                        lineNumber++;
                        if (counter > 0)
                        {
                            line = line.Replace(apostrophe, doubleQoute);
                            line = line.Replace(specialCharacter, "");

                            splitedLine = line.Split(new string[] { FileDelimiter }, StringSplitOptions.RemoveEmptyEntries);

                            int fieldCount = 0;
                            int charNumbers = 0;
                            string newLine = null;

                            foreach (char c in line)
                            {
                                charNumbers++;

                                if (c == '\t')
                                    fieldCount++;
                                if (fieldCount == 4)
                                {
                                    newLine = line.Substring(charNumbers);
                                    break;
                                }
                            }


                            /*                            if (lineNumber == 18)
                                                            lineNumber = lineNumber;*/


                            var regexLinks = new Regex(@"(?<url>(http:|https:[/][/]|www.)([a-z]|[A-Z]|[0-9]|[/.]|[~])*)");
                            var matchesLinks = regexLinks.Matches(newLine);
                            string links = null;
                            string LinkValue = null;
                            foreach (Match m in matchesLinks)
                            {
                                LinkValue = m.Value;
                                if (LinkValue.EndsWith("pic"))
                                    LinkValue = LinkValue.Substring(0, LinkValue.Length - 3);
                                if (LinkValue.EndsWith("http"))
                                    LinkValue = LinkValue.Substring(0, LinkValue.Length - 4);
                                if (LinkValue.EndsWith("https"))
                                    LinkValue = LinkValue.Substring(0, LinkValue.Length - 5);

                                links = links + LinkValue + " ";
                            }

                            if (links != null)
                            {
                                int linksLength = links.Length;
                                if (linksLength > 200)
                                    linksLength = 200;
                                links = links.Substring(0, linksLength);
                                links = links.Trim();
                            }


                            string link1 = null; //string.Empty;
                            string link2 = null; //string.Empty;
                            string[] splitedlinks = null;

                            if (links != null)
                            {
                                splitedlinks = links.Split(new string[] { "https" }, StringSplitOptions.RemoveEmptyEntries);
                                if (!string.IsNullOrWhiteSpace(splitedlinks[0]))
                                {
                                    link1 = "https" + splitedlinks[0];
                                }

                                if (splitedlinks.Length > 1 && (!string.IsNullOrWhiteSpace(splitedlinks[1])))
                                {
                                    link2 = "https" + splitedlinks[1];
                                }
                            }



                            var regexHashtags = new Regex(@"(?<=#)\w+");
                            var matchesHashtags = regexHashtags.Matches(newLine);
                            string hashtags = null;
                            string hashtagValue = null;
                            foreach (Match m in matchesHashtags)
                            {
                                hashtagValue = m.Value;
                                if (hashtagValue.EndsWith("pic"))
                                    hashtagValue = hashtagValue.Substring(0, hashtagValue.Length - 3);
                                if (hashtagValue.EndsWith("http"))
                                    hashtagValue = hashtagValue.Substring(0, hashtagValue.Length - 4);
                                if (hashtagValue.EndsWith("https"))
                                    hashtagValue = hashtagValue.Substring(0, hashtagValue.Length - 5);

                                hashtags = hashtags + "#" + hashtagValue + " ";
                            }

                            var regexHashtagsWithSpace = new Regex(@"(?<=#\s)\w+");
                            var matchesHashtagsWithSpace = regexHashtagsWithSpace.Matches(newLine);
                            foreach (Match m in matchesHashtagsWithSpace)
                            {
                                hashtagValue = m.Value;
                                if (hashtagValue.EndsWith("pic"))
                                    hashtagValue = hashtagValue.Substring(0, hashtagValue.Length - 3);
                                if (hashtagValue.EndsWith("http"))
                                    hashtagValue = hashtagValue.Substring(0, hashtagValue.Length - 4);
                                if (hashtagValue.EndsWith("https"))
                                    hashtagValue = hashtagValue.Substring(0, hashtagValue.Length - 5);

                                hashtags = hashtags + "#" + hashtagValue + " ";
                            }


                            if (hashtags != null)
                            {
                                int hashtagsLength = hashtags.Length;
                                if (hashtagsLength > 100)
                                    hashtagsLength = 100;

                                hashtags = hashtags.Substring(0, hashtagsLength);
                                hashtags = hashtags.Trim();

                            }


                            string hashtag1 = null; // string.Empty;
                            string hashtag2 = null; // string.Empty;
                            string hashtag3 = null; // string.Empty;
                            string[] splitedHashtags;

                            if (hashtags != null)
                            {
                                splitedHashtags = hashtags.Split(new char[] { '#' }, StringSplitOptions.RemoveEmptyEntries);
                                if (!string.IsNullOrWhiteSpace(splitedHashtags[0]))
                                {
                                    hashtag1 = "#" + splitedHashtags[0];
                                }

                                if (splitedHashtags.Length > 1 && (!string.IsNullOrWhiteSpace(splitedHashtags[1])))
                                {
                                    hashtag2 = "#" + splitedHashtags[1];
                                }

                                if (splitedHashtags.Length > 2 && (!string.IsNullOrWhiteSpace(splitedHashtags[2])))
                                {
                                    hashtag3 = "#" + splitedHashtags[2];
                                }
                            }


                            var regexMentions = new Regex(@"(?<=@)\w+");
                            var matchesMentions = regexMentions.Matches(newLine);
                            string mentions = null;
                            string mentionValue = null;
                            foreach (Match m in matchesMentions)
                            {
                                mentionValue = m.Value;
                                if (mentionValue.EndsWith("pic"))
                                    mentionValue = mentionValue.Substring(0, mentionValue.Length - 3);
                                if (mentionValue.EndsWith("http"))
                                    mentionValue = mentionValue.Substring(0, mentionValue.Length - 4);
                                if (mentionValue.EndsWith("https"))
                                    mentionValue = mentionValue.Substring(0, mentionValue.Length - 5);

                                mentions = mentions + "@" + mentionValue + " ";
                            }

                            var regexMentionsWithSpace = new Regex(@"(?<=@\s)\w+");
                            var matchesMentionsWithSpace = regexMentionsWithSpace.Matches(newLine);

                            foreach (Match m in matchesMentionsWithSpace)
                            {
                                mentionValue = m.Value;
                                if (mentionValue.EndsWith("pic"))
                                    mentionValue = mentionValue.Substring(0, mentionValue.Length - 3);
                                if (mentionValue.EndsWith("https"))
                                    mentionValue = mentionValue.Substring(0, mentionValue.Length - 5);

                                mentions = mentions + "@" + mentionValue + " ";
                            }

                            if (mentions != null)
                            {
                                int mentionsLength = mentions.Length;
                                if (mentionsLength > 100)
                                    mentionsLength = 100;
                                mentions = mentions.Substring(0, mentionsLength);
                                mentions = mentions.Trim();
                            }

                            string mention1 = null; //string.Empty;
                            string mention2 = null; //string.Empty;
                            string[] splitedmentions;

                            if (mentions != null)
                            {
                                splitedmentions = mentions.Split(new char[] { '@' }, StringSplitOptions.RemoveEmptyEntries);
                                if (!string.IsNullOrWhiteSpace(splitedmentions[0]))
                                {
                                    mention1 = "@" + splitedmentions[0];
                                }

                                if (splitedmentions.Length > 1 && (!string.IsNullOrWhiteSpace(splitedmentions[1])))
                                {
                                    mention2 = "@" + splitedmentions[1];
                                }
                            }



                            int? mentionId1 = null;
                            int? mentionId2 = null;
                            int? hashtagId1 = null;
                            int? hashtagId2 = null;
                            int? hashtagId3 = null;
                            int? linkId1 = null;
                            int? linkId2 = null;
                            int? dateId = null;

                            if (!string.IsNullOrWhiteSpace(mention1))
                            {
                                //var acc = from element in dtAccounts
                                //          where element
                                var results = (from myRow in dtAccounts.AsEnumerable()
                                               where string.Compare("@" + myRow.Field<string>("ScreenName"), mention1) == 0
                                               select myRow).ToList();
                                if (results.Count == 0)
                                {
                                    mentionId1 = InsertAccount(myADONETConnection, mention1);
                                    RefreshAccounts(myADONETConnection);
                                }
                            }


                            if (!string.IsNullOrWhiteSpace(mention2))
                            {
                                var results1 = (from myRow in dtAccounts.AsEnumerable()
                                                where string.Compare("@" + myRow.Field<string>("ScreenName"), mention2) == 0
                                                select myRow).ToList();
                                if (results1.Count == 0)
                                {
                                    mentionId2 = InsertAccount(myADONETConnection, mention2);
                                    RefreshAccounts(myADONETConnection);
                                }
                            }


                            line = line.Substring(0, charNumbers);
                            line = line + newLine;


                            if (hashtag1 != null)
                            {
                                hashtagId1 = InsertHashtagDimention(myADONETConnection, hashtag1);
                            }
                            if (hashtag2 != null)
                            {
                                hashtagId2 = InsertHashtagDimention(myADONETConnection, hashtag2);
                            }
                            if (hashtag3 != null)
                            {
                                hashtagId3 = InsertHashtagDimention(myADONETConnection, hashtag3);
                            }


                            if (link1 != null)
                            {
                                linkId1 = InsertLinkDimention(myADONETConnection, link1);
                            }
                            if (link2 != null)
                            {
                                linkId2 = InsertLinkDimention(myADONETConnection, link2);
                            }


                            if (splitedLine.Length > 3 && (!string.IsNullOrWhiteSpace(splitedLine[3])))
                            {


                                DateTime dt = DateTime.ParseExact(splitedLine[3], "yyyy-MM-dd HH:mm:ss", null);
                                string s = dt.ToString("yyyy-MM-dd", null);
                                DateTime dtTweetDate = DateTime.ParseExact(s, "yyyy-MM-dd", null);

                                var tweetDate = (from myRow in dtDates.AsEnumerable()
                                                 where myRow.Field<DateTime>("DayDate") == dtTweetDate
                                                 select myRow).ToList();
                                if (tweetDate.Count != 0)
                                {
                                    dateId = tweetDate[0].Field<int>("Id");
                                }
                            }



                            int? AccountId = null;
                            string FullText = null;
                            string SpecialText = null;
                            string TweetSpecialId = null;
                            int? LikesCount = null;
                            int? RetweetCount = null;
                            int? CommentsCount = null;
                            //int? DateId = null;
                            //int? Hashtag1 = null;
                            //int? Hashtag2 = null;
                            //int? Hashtag3 = null;
                            //int? Mention1 = null;
                            //int? Mention2 = null;
                            //int? Link1 = null;
                            //int? Link2 = null;


                            if (splitedLine.Length > 2 && (!string.IsNullOrWhiteSpace(splitedLine[2])))
                            {
                                var findAccount = (from myRow in dtAccounts.AsEnumerable()
                                                   where string.Compare("@" + myRow.Field<string>("ScreenName"), splitedLine[2]) == 0
                                                   select myRow).ToList();
                                if (findAccount.Count != 0)
                                {
                                    AccountId = findAccount[0].Field<int>("AccountId");
                                }
                                else
                                {
                                    AccountId = InsertAccount(myADONETConnection, splitedLine[2]);
                                    RefreshAccounts(myADONETConnection);
                                }
                            }

                            if (splitedLine.Length > 4 && (!string.IsNullOrWhiteSpace(splitedLine[4])))
                            {
                                FullText = splitedLine[4];
                            }

                            if (splitedLine.Length > 4 && (!string.IsNullOrWhiteSpace(splitedLine[4])))
                            {
                                SpecialText = splitedLine[4];
                            }

                            if (splitedLine.Length > 1 && (!string.IsNullOrWhiteSpace(splitedLine[1])))
                            {
                                TweetSpecialId = splitedLine[1];
                            }

                            if (splitedLine.Length > 5 && (!string.IsNullOrWhiteSpace(splitedLine[5])))
                            {
                                LikesCount = int.Parse(splitedLine[5]);
                            }
                            if (splitedLine.Length > 7 && (!string.IsNullOrWhiteSpace(splitedLine[7])))
                            {
                                RetweetCount = int.Parse(splitedLine[7]);
                            }
                            if (splitedLine.Length > 8 && (!string.IsNullOrWhiteSpace(splitedLine[8])))
                            {
                                CommentsCount = int.Parse(splitedLine[8]);
                            }


                            //
                            string insertTweetQuery = "INSERT INTO [dbo].[TweetMain] ([AccountId],[FullText],[SpecialText],[TweetSpecialId],[LikesCount],[RetweetCount],[CommentsCount],[DateId],[Hashtag1],[Hashtag2],[Hashtag3],[Mention1],[Mention2],[Link1],[Link2]) VALUES (@AccountId,@FullText,@SpecialText,@TweetSpecialId,@LikesCount,@RetweetCount,@CommentsCount,@DateId,@Hashtag1,@Hashtag2,@Hashtag3,@Mention1,@Mention2,@Link1,@Link2)";

                            using (SqlCommand cmd = new SqlCommand(insertTweetQuery, myADONETConnection))
                            {
                                cmd.Parameters.AddWithValue("@AccountId", (AccountId != null) ? AccountId : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@FullText", (FullText != null) ? FullText : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@SpecialText", (SpecialText != null) ? SpecialText : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@TweetSpecialId", (TweetSpecialId != null) ? TweetSpecialId : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@LikesCount", (LikesCount != null) ? LikesCount : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@RetweetCount", (RetweetCount != null) ? RetweetCount : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@CommentsCount", (CommentsCount != null) ? CommentsCount : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@DateId", (dateId != null) ? dateId : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@Hashtag1", (hashtagId1 != null) ? hashtagId1 : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@Hashtag2", (hashtagId2 != null) ? hashtagId2 : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@Hashtag3", (hashtagId3 != null) ? hashtagId3 : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@Mention1", (mentionId1 != null) ? mentionId1 : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@Mention2", (mentionId2 != null) ? mentionId2 : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@Link1", (linkId1 != null) ? linkId1 : (object)DBNull.Value);
                                cmd.Parameters.AddWithValue("@Link2", (linkId2 != null) ? linkId2 : (object)DBNull.Value);
                                if (myADONETConnection.State == System.Data.ConnectionState.Closed)
                                    myADONETConnection.Open();

                                cmd.ExecuteNonQuery();

                                if (myADONETConnection.State == System.Data.ConnectionState.Open)
                                    myADONETConnection.Close();

                            }

                        }

                        counter++;
                    }

                    SourceFile.Close();
                    //move the file to archive folder after adding datetime to it
                    File.Move(fileName, ArchiveFolder + "\\" + (fileName.Replace(SourceFolderPath, "")).Replace(FileExtension, "") + "_" + datetime + FileExtension);
                    string archievedFileName = "";
                    archievedFileName = ArchiveFolder + "" + "";

                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (Exception exception)
            {
                int x = 0;
                x++;
                // Create Log File for Errors
                //using (StreamWriter sw = File.CreateText(Dts.Variables["User::LogFolder"].Value.ToString()
                //    + "\\" + "ErrorLog_" + datetime + ".log"))
                //{
                //    sw.WriteLine(exception.ToString() + " \n My Line Number = " + lineNumber.ToString());
                //Dts.TaskResult = (int)ScriptResults.Failure;
                //}

            }

        }

        private int InsertAccount(SqlConnection con, string sreenName)
        {
            using (SqlCommand cmd = new SqlCommand("INSERT INTO Accounts(ScreenName) output INSERTED.AccountId VALUES(@ScreenName)", con))
            {
                cmd.Parameters.AddWithValue("@ScreenName", sreenName.Substring(1));
                if (con.State == System.Data.ConnectionState.Closed)
                    con.Open();

                int modified = (int)cmd.ExecuteScalar();

                if (con.State == System.Data.ConnectionState.Open)
                    con.Close();

                return modified;
            }
        }

        private int InsertHashtagDimention(SqlConnection con, string hashtagText)
        {
            int id = 0;
            //Test if Hashtag exists
            using (SqlCommand cmd = new SqlCommand("select * from [dbo].[TweetHashtagDim] where [HashtagText]=@HashtagText", con))
            {
                cmd.Parameters.AddWithValue("@HashtagText", hashtagText);
                if (con.State == System.Data.ConnectionState.Closed)
                    con.Open();

                object obj = cmd.ExecuteScalar();

                if (cmd.ExecuteScalar() != null)
                {
                    int.TryParse(obj.ToString(), out id);
                }
            }

            if (id == 0)
            {
                //INSERT INTO TweetHashtagDim(HashtagText) output INSERTED.Id VALUES(@HashtagText)
                using (SqlCommand cmd = new SqlCommand("INSERT INTO TweetHashtagDim(HashtagText) output INSERTED.Id VALUES(@HashtagText)", con))
                {
                    cmd.Parameters.AddWithValue("@HashtagText", hashtagText);

                    int modified = (int)cmd.ExecuteScalar();

                    return modified;
                }
            }

            if (con.State == System.Data.ConnectionState.Open)
                con.Close();
            return id;
        }

        private int InsertLinkDimention(SqlConnection con, string link)
        {
            int id = 0;
            //Test if Hashtag exists
            using (SqlCommand cmd = new SqlCommand("select * from [dbo].[TweetLinkDim] where [LinkText]=@LinkText", con))
            {
                cmd.Parameters.AddWithValue("@LinkText", link);
                if (con.State == System.Data.ConnectionState.Closed)
                    con.Open();

                object obj = cmd.ExecuteScalar();

                if (cmd.ExecuteScalar() != null)
                {
                    int.TryParse(obj.ToString(), out id);
                }
            }

            if (id == 0)
            {
                //INSERT INTO TweetHashtagDim(HashtagText) output INSERTED.Id VALUES(@HashtagText)
                using (SqlCommand cmd = new SqlCommand("INSERT INTO TweetLinkDim(LinkText) output INSERTED.Id VALUES(@LinkText)", con))
                {
                    cmd.Parameters.AddWithValue("@LinkText", link);

                    int modified = (int)cmd.ExecuteScalar();

                    return modified;
                }
            }

            if (con.State == System.Data.ConnectionState.Open)
                con.Close();
            return id;
        }


        private void RefreshAccounts(SqlConnection con)
        {
            using (SqlCommand cmd = new SqlCommand("SELECT [AccountId],[ScreenName],[SpecialAccountId] FROM [MediaStat].[dbo].[Accounts]", con))
            {
                if (con.State == System.Data.ConnectionState.Closed)
                    con.Open();

                dtAccounts.Clear();
                SqlDataReader drAccounts = cmd.ExecuteReader(CommandBehavior.CloseConnection);
                dtAccounts.Load(drAccounts);
                if (con.State == System.Data.ConnectionState.Open)
                    con.Close();
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_22e85da4b686459bb74a5ab1a5a57438</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_22e85da4b686459bb74a5ab1a5a57438</msb:DisplayName>
    <msb:ProjectId>{FF6E8AA6-C769-46F5-A62B-EAE28D7B5EF5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_22e85da4b686459bb74a5ab1a5a57438.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="c729159d4e174f2f9444a8deceeb857b">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>29</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>381</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="0e68ba4929db4e7f81174bbcfe1caa82">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>437</msb:LineNumber>
      <msb:ColumnNumber>29</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="e1b719609b50409a8389eb85793e1a4e">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>565</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="7192581b840e460d83c4b464db73a645">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>672</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="eb595d3e318b4737842aaebd9a93218e">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>111</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f5c32713d3394a0dad85d88527315df7.Properties.Settings.get_Default():ST_f5c32713d3394a0dad85d88527315df7.Properties.Sett" +
    "ings")]

namespace ST_f5c32713d3394a0dad85d88527315df7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f5c32713d3394a0dad85d88527315df7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f5c32713d3394a0dad85d88527315df7")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f5c32713d3394a0dad85d88527315df7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f5c32713d3394a0dad85d88527315df7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f5c32713d3394a0dad85d88527315df7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f5c32713d3394a0dad85d88527315df7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f5c32713d3394a0dad85d88527315df7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_22e85da4b686459bb74a5ab1a5a57438.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABOopl8AAAAAAAAAAOAAIiALATAAADgAAAAIAAAAAAAA1lcA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIRXAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA3DcAAAAgAAAAOAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAA6AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAQAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC4
VwAAAAAAAEgAAAACAAUAvDMAABAjAAABAAAAAAAAAMxWAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwApDwAAAQAAERYKKBAAAAoMEgJyAQAAcCgRAAAKCwIo
EgAACm8TAAAKch8AAHBvFAAACm8VAAAKbxYAAAoNAigSAAAKbxMAAApyRQAAcG8UAAAKbxUAAApv
FgAACg0CKBIAAApvEwAACnIfAABwbxQAAAoJbxcAAAoCKBIAAApvEwAACnJ9AABwbxQAAApvFQAA
Cm8WAAAKEwQCKBIAAApvEwAACnKlAABwbxQAAApvFQAACm8WAAAKEwURBXLNAABwctMAAHBvGAAA
ChMFAigSAAAKbxMAAApy1wAAcG8UAAAKbxUAAApvFgAACiYCKBIAAApvEwAACnIFAQBwbxQAAApv
FQAACm8WAAAKEwZzGQAAChMHCXItAQBwEQQoGgAACigbAAAKcxwAAAoTCAIoEgAACm8dAAAKcjEB
AHBvHgAACgIoEgAACm8fAAAKbyAAAAp1EQAAARMIcl8BAHARCHMhAAAKHyBvIgAAChMJAnsBAAAE
EQlvIwAACnIKAgBwEQhvJAAAChEIcyEAAAofIG8iAAAKEwoRBxEKbyMAAAoTCxYTDDhzDQAAEQsR
DJoTDXMOAAAGEw4WEw9yggIAcBMRcoYCAHATEnKMAgBwExMRDSglAAAKcyYAAAoTFDjDDAAABhdY
ChEPFj6xDAAAcxAAAAYTFREQEREREm8YAAAKExAREBETcpACAHBvGAAAChMQEQ4REBeNKAAAASUW
EQWiF28nAAAKfQgAAAQWExYWExcUExgREBM2FhM3KzERNhE3bygAAAoRFxdYExcfCTMGERYXWBMW
ERYaMw0REBEXbykAAAoTGCsRETcXWBM3ETcRNm8qAAAKMsRykgIAcHMrAAAKERhvLAAAChQTGRQT
Gm8tAAAKEzg4hgAAABE4by4AAAp0MwAAAW8vAAAKExoRGnIQAwBwbzAAAAosExEaFhEabyoAAAoZ
WW8xAAAKExoRGnIYAwBwbzAAAAosExEaFhEabyoAAAoaWW8xAAAKExoRGnIiAwBwbzAAAAosExEa
FhEabyoAAAobWW8xAAAKExoRGREaci4DAHAoMgAAChMZEThvMwAACjpu////3hUROHUWAAABEzkR
OSwHETlvNAAACtwRGSwuERlvKgAAChM6ETogyAAAADEHIMgAAAATOhEZFhE6bzEAAAoTGREZbzUA
AAoTGRQTGxQTHBQTHREZLFURGReNKAAAASUWciIDAHCiF28nAAAKEx0RHRaaKDYAAAotEHIiAwBw
ER0WmigaAAAKExsRHY5pFzEbER0Xmig2AAAKLRByIgMAcBEdF5ooGgAAChMccjIDAHBzKwAAChEY
bywAAAoUEx4UEx9vLQAAChM4OIsAAAAROG8uAAAKdDMAAAFvLwAAChMfER9yEAMAcG8wAAAKLBMR
HxYRH28qAAAKGVlvMQAAChMfER9yGAMAcG8wAAAKLBMRHxYRH28qAAAKGllvMQAAChMfER9yIgMA
cG8wAAAKLBMRHxYRH28qAAAKG1lvMQAAChMfER5yRgMAcBEfci4DAHAoNwAAChMeEThvMwAACjpp
////3hUROHUWAAABEzkROSwHETlvNAAACtxySgMAcHMrAAAKERhvLAAACm8tAAAKEzg4iwAAABE4
by4AAAp0MwAAAW8vAAAKEx8RH3IQAwBwbzAAAAosExEfFhEfbyoAAAoZWW8xAAAKEx8RH3IYAwBw
bzAAAAosExEfFhEfbyoAAAoaWW8xAAAKEx8RH3IiAwBwbzAAAAosExEfFhEfbyoAAAobWW8xAAAK
Ex8RHnJGAwBwER9yLgMAcCg3AAAKEx4ROG8zAAAKOmn////eFRE4dRYAAAETORE5LAcROW80AAAK
3BEeLCgRHm8qAAAKEzsROx9kMQQfZBM7ER4WETtvMQAAChMeER5vNQAAChMeFBMgFBMhFBMiER4s
dBEeF401AAABJRYfI50XbzgAAAoTIxEjFpooNgAACi0QckYDAHARIxaaKBoAAAoTIBEjjmkXMRsR
IxeaKDYAAAotEHJGAwBwESMXmigaAAAKEyERI45pGDEbESMYmig2AAAKLRByRgMAcBEjGJooGgAA
ChMicmIDAHBzKwAAChEYbywAAAoUEyQUEyVvLQAAChM4OIsAAAAROG8uAAAKdDMAAAFvLwAAChMl
ESVyEAMAcG8wAAAKLBMRJRYRJW8qAAAKGVlvMQAAChMlESVyGAMAcG8wAAAKLBMRJRYRJW8qAAAK
GllvMQAAChMlESVyIgMAcG8wAAAKLBMRJRYRJW8qAAAKG1lvMQAAChMlESRydgMAcBElci4DAHAo
NwAAChMkEThvMwAACjpp////3hUROHUWAAABEzkROSwHETlvNAAACtxyegMAcHMrAAAKERhvLAAA
Cm8tAAAKEzgrahE4by4AAAp0MwAAAW8vAAAKEyURJXIQAwBwbzAAAAosExElFhElbyoAAAoZWW8x
AAAKEyURJXIiAwBwbzAAAAosExElFhElbyoAAAobWW8xAAAKEyURJHJ2AwBwESVyLgMAcCg3AAAK
EyQROG8zAAAKLY3eFRE4dRYAAAETORE5LAcROW80AAAK3BEkLCgRJG8qAAAKEzwRPB9kMQQfZBM8
ESQWETxvMQAAChMkESRvNQAAChMkERUUfQoAAAQRFRR9CwAABBEkLFwRJBeNNQAAASUWH0CdF284
AAAKEyYRJhaaKDYAAAotFREVcnYDAHARJhaaKBoAAAp9CgAABBEmjmkXMSARJheaKDYAAAotFREV
cnYDAHARJheaKBoAAAp9CwAABBIn/hUBAAAbEij+FQEAABsSKf4VAQAAGxIq/hUBAAAbEiv+FQEA
ABsSLP4VAQAAGxIt/hUBAAAbEi7+FQEAABsRFXsKAAAEKDYAAAotRwJ7AQAABCg5AAAKERX+BhEA
AAZzOgAACigBAAArKAIAACtvPQAACi0eEicCEQgRFXsKAAAEKAIAAAYoPgAACgIRCCgFAAAGERV7
CwAABCg2AAAKLUcCewEAAAQoOQAAChEV/gYSAAAGczoAAAooAQAAKygCAAArbz0AAAotHhIoAhEI
ERV7CwAABCgCAAAGKD4AAAoCEQgoBQAABhEQFhEXbzEAAAoTEBEQERgoGgAAChMQESAsERIpAhEI
ESAoAwAABig+AAAKESEsERIqAhEIESEoAwAABig+AAAKESIsERIrAhEIESIoAwAABig+AAAKERss
ERIsAhEIERsoBAAABig+AAAKERwsERItAhEIERwoBAAABig+AAAKEQ57CAAABI5pGT6VAAAAEQ57
CAAABBmaKDYAAAo6ggAAAHMTAAAGEz0RDnsIAAAEGZpykgMAcBQoPwAAChM+Ej5yugMAcBQoQAAA
ChM/ET0RP3K6AwBwFCg/AAAKfQwAAAQRByg5AAAKET3+BhQAAAZzOgAACigBAAArKAIAACsTQBFA
bz0AAAosGRIuEUAWb0EAAApy0AMAcCgDAAArKD4AAAoSL/4VAQAAGxQTMBQTMRQTMhIz/hUBAAAb
EjT+FQEAABsSNf4VAQAAGxEOewgAAASOaRg+jwAAABEOewgAAAQYmig2AAAKLX8CewEAAAQoOQAA
ChEOewkAAAQlLRomEQ4RDv4GDwAABnM6AAAKJRNCfQkAAAQRQigBAAArKAIAACsTQRFBbz0AAAos
GxIvEUEWb0EAAApy1gMAcCgDAAArKD4AAAorIBIvAhEIEQ57CAAABBiaKAIAAAYoPgAACgIRCCgF
AAAGEQ57CAAABI5pGjEbEQ57CAAABBqaKDYAAAotCxEOewgAAAQamhMwEQ57CAAABI5pGjEbEQ57
CAAABBqaKDYAAAotCxEOewgAAAQamhMxEQ57CAAABI5pFzEbEQ57CAAABBeaKDYAAAotCxEOewgA
AAQXmhMyEQ57CAAABI5pGzElEQ57CAAABBuaKDYAAAotFRIzEQ57CAAABBuaKEMAAAooPgAAChEO
ewgAAASOaR0xJREOewgAAAQdmig2AAAKLRUSNBEOewgAAAQdmihDAAAKKD4AAAoRDnsIAAAEjmke
MSURDnsIAAAEHpooNgAACi0VEjURDnsIAAAEHpooQwAACig+AAAKcuoDAHARCHMhAAAKE0MRQ29E
AAAKcucGAHASLyhFAAAKLQd+RgAACisHES+MAQAAG29HAAAKJhFDb0QAAApy/QYAcBEwLQd+RgAA
CisCETBvRwAACiYRQ29EAAAKchEHAHARMS0HfkYAAAorAhExb0cAAAomEUNvRAAACnIrBwBwETIt
B35GAAAKKwIRMm9HAAAKJhFDb0QAAApySwcAcBIzKEUAAAotB35GAAAKKwcRM4wBAAAbb0cAAAom
EUNvRAAACnJjBwBwEjQoRQAACi0HfkYAAAorBxE0jAEAABtvRwAACiYRQ29EAAAKcn8HAHASNShF
AAAKLQd+RgAACisHETWMAQAAG29HAAAKJhFDb0QAAApynQcAcBIuKEUAAAotB35GAAAKKwcRLowB
AAAbb0cAAAomEUNvRAAACnKtBwBwEikoRQAACi0HfkYAAAorBxEpjAEAABtvRwAACiYRQ29EAAAK
csEHAHASKihFAAAKLQd+RgAACisHESqMAQAAG29HAAAKJhFDb0QAAApy1QcAcBIrKEUAAAotB35G
AAAKKwcRK4wBAAAbb0cAAAomEUNvRAAACnLpBwBwEicoRQAACi0HfkYAAAorBxEnjAEAABtvRwAA
CiYRQ29EAAAKcv0HAHASKChFAAAKLQd+RgAACisHESiMAQAAG29HAAAKJhFDb0QAAApyEQgAcBIs
KEUAAAotB35GAAAKKwcRLIwBAAAbb0cAAAomEUNvRAAACnIfCABwEi0oRQAACi0HfkYAAAorBxEt
jAEAABtvRwAACiYRCG9IAAAKLQcRCG8kAAAKEUNvSQAACiYRCG9IAAAKFzMHEQhvSgAACt4MEUMs
BxFDbzQAAArcEQ8XWBMPERRvSwAACiUTEDou8///ERRvTAAAChENHI0oAAABJRYRBqIlF3ItCABw
oiUYEQ0JcpACAHBvGAAAChEEcpACAHBvGAAACqIlGXIxCABwoiUaB6IlGxEEoihNAAAKKE4AAAoR
BiYCKBIAAAoWb08AAAoRDBdYEwwRDBELjmk/gvL//94FJhYm3gAqAAAAQawAAAIAAACSAgAAmQAA
ACsDAAAVAAAAAAAAAAIAAADyAwAAngAAAJAEAAAVAAAAAAAAAAIAAAC9BAAAngAAAFsFAAAVAAAA
AAAAAAIAAAA7BgAAngAAANkGAAAVAAAAAAAAAAIAAAAGBwAAdwAAAH0HAAAVAAAAAAAAAAIAAAAZ
DAAAdAIAAI0OAAAMAAAAAAAAAAAAAAAVAAAADg8AACMPAAAFAAAAGwAAARswBABbAAAAAgAAEXI1
CABwA3MhAAAKCgZvRAAACnLUCABwBBdvKQAACm9HAAAKJgNvSAAACi0GA28kAAAKBm9QAAAKpT0A
AAEDb0gAAAoXMwYDb0oAAAoL3goGLAYGbzQAAArcByoAARAAAAIADABDTwAKAAAAABswAwClAAAA
AwAAERYKcuwIAHADcyEAAAoLB29EAAAKcnsJAHAEb0cAAAomA29IAAAKLQYDbyQAAAoHb1AAAAoM
B29QAAAKLA4IbxYAAAoSAChRAAAKJt4KBywGB280AAAK3AYtN3KVCQBwA3MhAAAKDQlvRAAACnJ7
CQBwBG9HAAAKJglvUAAACqU9AAABEwTeGwksBglvNAAACtwDb0gAAAoXMwYDb0oAAAoGKhEEKgAA
AAEcAAACAA4AP00ACgAAAAACAGYAIYcACgAAAAAbMAMApQAAAAMAABEWCnI4CgBwA3MhAAAKCwdv
RAAACnK0CgBwBG9HAAAKJgNvSAAACi0GA28kAAAKB29QAAAKDAdvUAAACiwOCG8WAAAKEgAoUQAA
CibeCgcsBgdvNAAACtwGLTdyyAoAcANzIQAACg0Jb0QAAApytAoAcARvRwAACiYJb1AAAAqlPQAA
ARME3hsJLAYJbzQAAArcA29IAAAKFzMGA29KAAAKBioRBCoAAAABHAAAAgAOAD9NAAoAAAAAAgBm
ACGHAAoAAAAAGzACAFYAAAAEAAARcl8BAHADcyEAAAoKA29IAAAKLQYDbyQAAAoCewEAAARvUgAA
CgYfIG8iAAAKCwJ7AQAABAdvIwAACgNvSAAAChczBgNvSgAACt4KBiwGBm80AAAK3CoAAAEQAAAC
AAwAP0sACgAAAABKAnMZAAAKfQEAAAQCKFMAAAoqHgIoVAAACiqufgIAAAQtHnJZCwBw0AMAAAIo
VQAACm9WAAAKc1cAAAqAAgAABH4CAAAEKhp+AwAABCoeAoADAAAEKhp+BAAABCoeAihYAAAKKi5z
DAAABoAEAAAEKppydgMAcANyywsAcCgEAAArKBoAAAoCewgAAAQYmihZAAAKFv4BKpJydgMAcANy
ywsAcCgEAAArKBoAAAoCewoAAAQoWQAAChb+ASqScnYDAHADcssLAHAoBAAAKygaAAAKAnsLAAAE
KFkAAAoW/gEqXgNy4QsAcCgFAAArAnsMAAAEKFoAAAoqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAADgBwAAI34AAEwIAAAECwAAI1N0cmluZ3MAAAAAUBMAAPQLAAAjVVMARB8A
ABAAAAAjR1VJRAAAAFQfAAC8AwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAA
RwAAAAgAAAAMAAAAFAAAAAwAAABaAAAAAgAAABMAAAAEAAAAAgAAAAMAAAAEAAAAAwAAAAEAAAAH
AAAAAQAAAAQAAAAFAAAAAADjBQEAAAAAAAYAOAQyCAYAxwQyCAYAhAMfCA8ApggAAAYAsQOGBgYA
GwSGBgYA/AOGBgYArgSGBgYAWASGBgYAcQSGBgYAyAOGBgYA4wMnBQoAjASSBQoAxgKSBQ4A0gFX
AQYAMQIbBg4A3gZTCg4AcQdTCgYAjQcmAQYAQQAbBgYA+AeRCQYA8gEbBgYAdABsAQ4AvQpXAQYA
qgAbBg4AnAFTCgYAFwcbBgYAKwobBgYAJwYbBgYATAMyCAYAZwMfCAYAuQdSCAYANAdhBhIAJwPN
BRIAmAPNBRIA4gJMBgoAuwWSBRYA8Ag6AhYA3AE6AgYAQwUbBgYA7gomARYAqAk6AhYAyQc6Ag4A
6AdXAQ4AZQdXAQ4AvwYhBwYAHgWdCgYAtAkbBhIAywpyCRIAmAZyCRIAVAVyCRIAvgJyCQYAUgcb
BhoADAlXARoAWgBXARoAIAlXAR4A5wFABwYATABsAQYApQcbBhoAYAlXAQYAhAAbBg4AqAZTCgYA
CwYbBg4A2wdTCg4APANXAQ4AkgEhBwYAmgcmAQYAIgImAQYAbwIbBgYA/gEbBgYA1QqGBgAAAAAd
AQAAAAABAAEAAQAQAD0GzAA5AAEAAQAAABAAWQi9CHEAAgAHAAABEAADCb0IkQAEAAsAAwEAAPAJ
AAB1AAUADgADARAAAQAAAHEACAAOAAMBEAAhAAAAcQAKABAAAwEQAIoAAABxAAwAEwABAA4KjAIR
ACwGkAIRAK4ClQIRAMIBmgIGBk8BngJWgOAJoQJWgI4CoQIGAGMCpQIGALoAqQIGAHsAsgIGALEA
sgIGABEDtQJQIAAAAACGAEMGBgABADQwAAAAAIEAfwq5AgEArDAAAAAAgQDsBrkCAwB8MQAAAACB
AAMHuQIFAEwyAAAAAIEA/gnAAgcAwDIAAAAAhhgSCAYACADTMgAAAACDGBIIBgAIANsyAAAAAJMI
tQfGAggABzMAAAAAkwiWAswCCAAOMwAAAACTCKIC0gIIABYzAAAAAJYIOArZAgkAHTMAAAAAhhgS
CAYACQAlMwAAAACRGBgI3gIJANMyAAAAAIYYEggGAAkAMTMAAAAAgwDBAOICCQDTMgAAAACGGBII
BgAKAFgzAAAAAIMAFgDiAgoAfTMAAAAAgwA2AOICCwDTMgAAAACGGBIIBgAMAKIzAAAAAIMAnwDi
AgwAAAABAEgGAAACACcCAAABAEgGAAACAKkKAAABAEgGAAACAG4FAAABAEgGAAABABMFAAABAMUK
AAABAMUKAAABAMUKAAABAMUKCQASCAEAEQASCAYAGQASCAoAKQASCBAAMQASCBAAOQASCBAAQQAS
CBAASQASCBAAUQASCBAAWQASCBAAYQASCBAAaQASCAYA8QASCAYA+QASCAYAGQESCBUAgQC1CrUA
gQBBBboAcQDoCb8AKQHsCMUAMQESBssAOQHlBNIA4QBBBdYAOQHvBNoAQQGnAd8AeQASCAYAQQEZ
CuUASQH6COsAiQASCAYAKQGkCfIAUQESBvgAKQF2BtIAWQHMBv8A0QASCAQB0QB/BwsBeQCHARMB
cQE4BgYAeQEUARoBmQASCCABQQEyCigBQQHHCTIBQQFKBTcBQQFaBTwBiQESCBAAiQG1CEABkQEE
CEcBqQBpCtIAoQHlBNYAQQFlBUwBQQFKBVEBQQEZClcBqQCUCl4BsQAAAwYAQQEiBtYAQQGvAWIB
QQEZCmcBQQEyCm8BsQHlAX8BFAASCJMBwQF8ApkByQGNCrcBHAB1CjwBDAASCM8BgQAgCtUBgQBB
Bd8BHAASBucB4QGMAe0B6QELA/oB0QDRCf8BDAAGBV4B+QENBQUC8QH5BAoCcQEdAxICEQLeCjwB
cQH6AgYAGQJaAtYAGQL6AgYAQQEZChgCIQIZBR4CKQFECgEAEQJXB9IA6QEIAzQCeQBMBwYAcQAS
CAYA4QASCAYAKQIQAkICKQLRCksCAQESCFECIQESCAYAQQF0Al0CgQD4CmgCCAAYAIICCAAcAIcC
KQB7ACEDLgALAPkCLgATAAIDLgAbACEDLgAjACoDLgArAFMDLgAzAFMDLgA7AFMDLgBDACoDLgBL
AFkDLgBTAFMDLgBbAHADQwBjAIcCSQB7ACEDYwBzAIcCgQBrAIcCwwBrAIcC4wBrAIcCAwFrAIcC
HAAkAioCOwIDAAEABAADAAAAuQfoAgAAtgLuAgAAPAr0AgIACAADAAIACQAFAAEACgAFAAIACwAH
AHkBiwHIAQSAAAABAAAAwB1ZcAAAAAAAAPAAAAAEAAAAAAAAAAAAAABwAmMBAAAAAA8AAAAAAAAA
AAAAAHkCcwUAAAAABAAAAAAAAAAAAAAAcAJXAQAAAAAEAAAAAAAAAAAAAABwAhsGAAAAAA8AAAAA
AAAAAAAAAHkCMAEAAAAABAAAAAAAAAAAAAAAcAJCCQAAAAAEAAAAAAAAAAAAAABwAoICAAAAAAAA
AAABAAAAYwgAAAUAAgAGAAIABwACAAgAAgB3ALIBeQCyAYUA9gGFAFkChQBjAgAAAAAAPD5jX19E
aXNwbGF5Q2xhc3MxXzAAPE1haW4+Yl9fMAA8PmNfX0Rpc3BsYXlDbGFzczFfMQA8TWFpbj5iX18x
AE51bGxhYmxlYDEASUVudW1lcmFibGVgMQBFbnVtZXJhYmxlUm93Q29sbGVjdGlvbmAxAExpc3Rg
MQBtZW50aW9uMQBJbnQzMgA8PmNfX0Rpc3BsYXlDbGFzczFfMgA8TWFpbj5iX18yAEZ1bmNgMgBt
ZW50aW9uMgA8PjlfXzMAPE1haW4+Yl9fMwBTVF83Y2U1YWQ2ZmJjMTA0MTU3YjUzNGY0ZWI0ODRh
NDQxNwBTVF8yMmU4NWRhNGI2ODY0NTliYjc0YTVhYjFhNWE1NzQzOABnZXRfVVRGOAA8TW9kdWxl
PgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVt
LkRhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMATG9hZABGaWVsZABEYkNv
bW1hbmQAU3FsQ29tbWFuZABSZXBsYWNlAElzTnVsbE9yV2hpdGVTcGFjZQBkZWZhdWx0SW5zdGFu
Y2UARGF0YVRhYmxlAFZhcmlhYmxlAEFzRW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAHNyZWVuTmFtZQBEYXRlVGltZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFJlYWRMaW5lAHNwbGl0ZWRMaW5lAFR5cGUAQ29tcGFy
ZQBXaGVyZQBTeXN0ZW0uQ29yZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBDYXB0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAFRyeVBhcnNlAGR0VHdlZXREYXRlAGdldF9TdGF0
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1
ZQBzZXRfVmFsdWUAQWRkV2l0aFZhbHVlAGdldF9IYXNWYWx1ZQB2YWx1ZQBNb3ZlAEVuY29kaW5n
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAU3Vic3RyaW5nAE1hdGNoAGdldF9M
ZW5ndGgARW5kc1dpdGgAbGluawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU1RfMjJlODVkYTRiNjg2NDU5YmI3NGE1YWIxYTVhNTc0MzguZGxs
AERCTnVsbABnZXRfSXRlbQBTeXN0ZW0AVHJpbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0
TWFpbgBjb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AZ2V0X1Ry
YW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAE1hdGNoQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJD
b2xsZWN0aW9uAERiQ29ubmVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAElu
c2VydEhhc2h0YWdEaW1lbnRpb24ASW5zZXJ0TGlua0RpbWVudGlvbgBFeGNlcHRpb24AU3lzdGVt
LkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAFN5c3RlbS5MaW5xAENsZWFyAENoYXIARXhlY3V0ZVNj
YWxhcgBJRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAU3RyZWFtUmVhZGVy
AFRleHRSZWFkZXIASUZvcm1hdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlv
bk1hbmFnZXIAU3FsUGFyYW1ldGVyAENvbW1hbmRCZWhhdmlvcgBJRW51bWVyYXRvcgBHZXRFbnVt
ZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2Y1YzMyNzEzZDMzOTRhMGRhZDg1ZDg4
NTI3MzE1ZGY3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBN
YXRjaGVzAFNUX2Y1YzMyNzEzZDMzOTRhMGRhZDg1ZDg4NTI3MzE1ZGY3LlByb3BlcnRpZXMAZ2V0
X1ZhcmlhYmxlcwBHZXRGaWxlcwBTZXR0aW5ncwBEYXRhVGFibGVFeHRlbnNpb25zAEVudW1lcmFi
bGVSb3dDb2xsZWN0aW9uRXh0ZW5zaW9ucwBTeXN0ZW0uRGF0YS5EYXRhU2V0RXh0ZW5zaW9ucwBE
YXRhUm93RXh0ZW5zaW9ucwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU3lzdGVtLkNv
bGxlY3Rpb25zAGdldF9Db25uZWN0aW9ucwBTdHJpbmdTcGxpdE9wdGlvbnMAZ2V0X0NoYXJzAGdl
dF9QYXJhbWV0ZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAFJlZnJlc2hBY2NvdW50
cwBkdEFjY291bnRzAENvbmNhdABQYXJzZUV4YWN0AE9iamVjdABTcGxpdABnZXRfRGVmYXVsdABz
ZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvdW50
AEluc2VydEFjY291bnQAVG9MaXN0AE1vdmVOZXh0AFN5c3RlbS5UZXh0AGhhc2h0YWdUZXh0AGdl
dF9Ob3cARGF0YVJvdwBteVJvdwBSZWdleABnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AERp
cmVjdG9yeQBvcF9FcXVhbGl0eQAAHXkAeQB5AHkATQBNAGQAZABIAEgAbQBtAHMAcwAAJVUAcwBl
AHIAOgA6AFMAbwB1AHIAYwBlAEYAbwBsAGQAZQByAAA3JABQAGEAYwBrAGEAZwBlADoAOgBTAG8A
dQByAGMAZQBGAG8AbABkAGUAcgBQAGEAcgBhAG0AACdVAHMAZQByADoAOgBGAGkAbABlAEUAeAB0
AGUAbgBzAGkAbwBuAAAnVQBzAGUAcgA6ADoARgBpAGwAZQBEAGUAbABpAG0AaQB0AGUAcgAABVwA
dAAAAwkAAC1VAHMAZQByADoAOgBEAGUAcwB0AGkAbgBhAHQAaQBvAG4AVABhAGIAbABlAAAnVQBz
AGUAcgA6ADoAQQByAGMAaABpAHYAZQBGAG8AbABkAGUAcgAAAyoAAC1EAEIAXwBDAE8ATgBOAF8A
VAB3AGkAdAB0AGUAcgBSAGEAdwBEAGEAdABhAACAqVMARQBMAEUAQwBUACAAWwBBAGMAYwBvAHUA
bgB0AEkAZABdACwAWwBTAGMAcgBlAGUAbgBOAGEAbQBlAF0ALABbAFMAcABlAGMAaQBhAGwAQQBj
AGMAbwB1AG4AdABJAGQAXQAgAEYAUgBPAE0AIABbAE0AZQBkAGkAYQBTAHQAYQB0AF0ALgBbAGQA
YgBvAF0ALgBbAEEAYwBjAG8AdQBuAHQAcwBdAAB3UwBFAEwARQBDAFQAIABbAEkAZABdACwAWwBE
AGEAeQBEAGEAdABlAF0AIABGAFIATwBNACAAWwBNAGUAZABpAGEAUwB0AGEAdABdAC4AWwBkAGIA
bwBdAC4AWwBUAHcAZQBlAHQARABhAHQAZQBEAGkAbQBdAAADJwABBScAJwABA//+AQEAfSgAPwA8
AHUAcgBsAD4AKABoAHQAdABwADoAfABoAHQAdABwAHMAOgBbAC8AXQBbAC8AXQB8AHcAdwB3AC4A
KQAoAFsAYQAtAHoAXQB8AFsAQQAtAFoAXQB8AFsAMAAtADkAXQB8AFsALwAuAF0AfABbAH4AXQAp
ACoAKQABB3AAaQBjAAAJaAB0AHQAcAAAC2gAdAB0AHAAcwAAAyAAABMoAD8APAA9ACMAKQBcAHcA
KwAAAyMAABcoAD8APAA9ACMAXABzACkAXAB3ACsAABMoAD8APAA9AEAAKQBcAHcAKwAAA0AAABco
AD8APAA9AEAAXABzACkAXAB3ACsAACd5AHkAeQB5AC0ATQBNAC0AZABkACAASABIADoAbQBtADoA
cwBzAAEVeQB5AHkAeQAtAE0ATQAtAGQAZAABBUkAZAAAE0EAYwBjAG8AdQBuAHQASQBkAACC+0kA
TgBTAEUAUgBUACAASQBOAFQATwAgAFsAZABiAG8AXQAuAFsAVAB3AGUAZQB0AE0AYQBpAG4AXQAg
ACgAWwBBAGMAYwBvAHUAbgB0AEkAZABdACwAWwBGAHUAbABsAFQAZQB4AHQAXQAsAFsAUwBwAGUA
YwBpAGEAbABUAGUAeAB0AF0ALABbAFQAdwBlAGUAdABTAHAAZQBjAGkAYQBsAEkAZABdACwAWwBM
AGkAawBlAHMAQwBvAHUAbgB0AF0ALABbAFIAZQB0AHcAZQBlAHQAQwBvAHUAbgB0AF0ALABbAEMA
bwBtAG0AZQBuAHQAcwBDAG8AdQBuAHQAXQAsAFsARABhAHQAZQBJAGQAXQAsAFsASABhAHMAaAB0
AGEAZwAxAF0ALABbAEgAYQBzAGgAdABhAGcAMgBdACwAWwBIAGEAcwBoAHQAYQBnADMAXQAsAFsA
TQBlAG4AdABpAG8AbgAxAF0ALABbAE0AZQBuAHQAaQBvAG4AMgBdACwAWwBMAGkAbgBrADEAXQAs
AFsATABpAG4AawAyAF0AKQAgAFYAQQBMAFUARQBTACAAKABAAEEAYwBjAG8AdQBuAHQASQBkACwA
QABGAHUAbABsAFQAZQB4AHQALABAAFMAcABlAGMAaQBhAGwAVABlAHgAdAAsAEAAVAB3AGUAZQB0
AFMAcABlAGMAaQBhAGwASQBkACwAQABMAGkAawBlAHMAQwBvAHUAbgB0ACwAQABSAGUAdAB3AGUA
ZQB0AEMAbwB1AG4AdAAsAEAAQwBvAG0AbQBlAG4AdABzAEMAbwB1AG4AdAAsAEAARABhAHQAZQBJ
AGQALABAAEgAYQBzAGgAdABhAGcAMQAsAEAASABhAHMAaAB0AGEAZwAyACwAQABIAGEAcwBoAHQA
YQBnADMALABAAE0AZQBuAHQAaQBvAG4AMQAsAEAATQBlAG4AdABpAG8AbgAyACwAQABMAGkAbgBr
ADEALABAAEwAaQBuAGsAMgApAAAVQABBAGMAYwBvAHUAbgB0AEkAZAAAE0AARgB1AGwAbABUAGUA
eAB0AAAZQABTAHAAZQBjAGkAYQBsAFQAZQB4AHQAAB9AAFQAdwBlAGUAdABTAHAAZQBjAGkAYQBs
AEkAZAAAF0AATABpAGsAZQBzAEMAbwB1AG4AdAAAG0AAUgBlAHQAdwBlAGUAdABDAG8AdQBuAHQA
AB1AAEMAbwBtAG0AZQBuAHQAcwBDAG8AdQBuAHQAAA9AAEQAYQB0AGUASQBkAAATQABIAGEAcwBo
AHQAYQBnADEAABNAAEgAYQBzAGgAdABhAGcAMgAAE0AASABhAHMAaAB0AGEAZwAzAAATQABNAGUA
bgB0AGkAbwBuADEAABNAAE0AZQBuAHQAaQBvAG4AMgAADUAATABpAG4AawAxAAANQABMAGkAbgBr
ADIAAANcAAADXwAAgJ1JAE4AUwBFAFIAVAAgAEkATgBUAE8AIABBAGMAYwBvAHUAbgB0AHMAKABT
AGMAcgBlAGUAbgBOAGEAbQBlACkAIABvAHUAdABwAHUAdAAgAEkATgBTAEUAUgBUAEUARAAuAEEA
YwBjAG8AdQBuAHQASQBkACAAVgBBAEwAVQBFAFMAKABAAFMAYwByAGUAZQBuAE4AYQBtAGUAKQAA
F0AAUwBjAHIAZQBlAG4ATgBhAG0AZQAAgI1zAGUAbABlAGMAdAAgACoAIABmAHIAbwBtACAAWwBk
AGIAbwBdAC4AWwBUAHcAZQBlAHQASABhAHMAaAB0AGEAZwBEAGkAbQBdACAAdwBoAGUAcgBlACAA
WwBIAGEAcwBoAHQAYQBnAFQAZQB4AHQAXQA9AEAASABhAHMAaAB0AGEAZwBUAGUAeAB0AAAZQABI
AGEAcwBoAHQAYQBnAFQAZQB4AHQAAIChSQBOAFMARQBSAFQAIABJAE4AVABPACAAVAB3AGUAZQB0
AEgAYQBzAGgAdABhAGcARABpAG0AKABIAGEAcwBoAHQAYQBnAFQAZQB4AHQAKQAgAG8AdQB0AHAA
dQB0ACAASQBOAFMARQBSAFQARQBEAC4ASQBkACAAVgBBAEwAVQBFAFMAKABAAEgAYQBzAGgAdABh
AGcAVABlAHgAdAApAAB7cwBlAGwAZQBjAHQAIAAqACAAZgByAG8AbQAgAFsAZABiAG8AXQAuAFsA
VAB3AGUAZQB0AEwAaQBuAGsARABpAG0AXQAgAHcAaABlAHIAZQAgAFsATABpAG4AawBUAGUAeAB0
AF0APQBAAEwAaQBuAGsAVABlAHgAdAAAE0AATABpAG4AawBUAGUAeAB0AACAj0kATgBTAEUAUgBU
ACAASQBOAFQATwAgAFQAdwBlAGUAdABMAGkAbgBrAEQAaQBtACgATABpAG4AawBUAGUAeAB0ACkA
IABvAHUAdABwAHUAdAAgAEkATgBTAEUAUgBUAEUARAAuAEkAZAAgAFYAQQBMAFUARQBTACgAQABM
AGkAbgBrAFQAZQB4AHQAKQAAcVMAVABfAGYANQBjADMAMgA3ADEAMwBkADMAMwA5ADQAYQAwAGQA
YQBkADgANQBkADgAOAA1ADIANwAzADEANQBkAGYANwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAFVMAYwByAGUAZQBuAE4AYQBtAGUAAA9EAGEAeQBEAGEAdABlAAAA
AAB3UB86RzSSTIJFfhxbpCxcAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAiYCXB0QIDhFBDg4O
DhI9EkUSSRJJHQ4IDhIYCA4ODg4STRIcCAgODg4ODh0ODg4ODg4dDg4OHQ4VEVEBCBURUQEIFRFR
AQgVEVEBCBURUQEIFRFRAQgVEVEBCBURUQEIFRFRAQgODg4VEVEBCBURUQEIFRFRAQgOCBJVElkI
CAgSIBFBDhUSXQESYRUSXQESYRUSZQISYQISaQQAABFBBCABDg4FIAASgJUFIAASgJkGIAESgJ0c
AyAAHAMgAA4EIAEBHAUgAg4ODgUAAg4ODgYAAh0ODg4FIAASgKkGIAESgK0cBCABHBwGIAIBDhJF
ByABEkkRgLEGIAEBEoC1BQAAEoC9ByACAQ4SgL0JIAIdDh0OEYDBBCABAwgEIAEOCAMgAAgGIAES
gMkOBCAAElUEIAECDgUgAg4ICAYAAw4ODg4DIAACBAABAg4HAAQODg4ODgkgAh0OHQMRgMEFFRFR
AQgLAAEVEoDdARJhEj0HFRJlAhJhAgUgAgEcGBgQAQIVEoDdAR4AFRKA3QEeABUSZQIeAAIECgES
YRAQAQEVEl0BHgAVEoDpAR4ABhUSXQESYQUgAQETAAkAAxFBDg4SgO0HIAIODhKA7QUgARMACAgQ
AQIeABJhDgMKAQgEAAEIDgUgABKA+QQGEoD9ByACEoEBDhwFIAARgQUFAAEOHQ4FAAIBDg4FBwIS
aQgJBwUIEmkcEmkIBgACAg4QCAYHAhJpEkkIAAESgRURgRkFIAASgR0HIAIBDhKBHQMKAQ4FAAII
Dg4ECgERQQcAAgIRQRFBCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEj0EBhKAgQQGEoCF
AwYSEAIGCAMGERQDBh0OCAYVEmUCEmECAgYOAwYRQQYgAggSRQ4FIAEBEkUFAAASgIEFAAASgIUG
AAEBEoCFBAAAEhADAAABBSABAhJhBQgAEoCBBQgAEoCFBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2Y1YzMyNzEzZDMzOTRhMGRhZDg1
ZDg4NTI3MzE1ZGY3AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAArFcAAAAAAAAAAAAAxlcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ALhXAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAAAAAAAAAA
AAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAWXDA
HQAAAQBZcMAdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEA
QwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBmADUAYwAzADIA
NwAxADMAZAAzADMAOQA0AGEAMABkAGEAZAA4ADUAZAA4ADgANQAyADcAMwAxADUAZABmADcAAAA+
AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA2ADEANgAuADIAOAA3ADYA
MQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAyADIAZQA4ADUAZABh
ADQAYgA2ADgANgA0ADUAOQBiAGIANwA0AGEANQBhAGIAMQBhADUAYQA1ADcANAAzADgALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADIAMgBl
ADgANQBkAGEANABiADYAOAA2ADQANQA5AGIAYgA3ADQAYQA1AGEAYgAxAGEANQBhADUANwA0ADMA
OAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBmADUAYwAz
ADIANwAxADMAZAAzADMAOQA0AGEAMABkAGEAZAA4ADUAZAA4ADgANQAyADcAMwAxADUAZABmADcA
AABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANgAxADYALgAy
ADgANwA2ADEAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcANgAxADYALgAyADgANwA2ADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAA2DcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="437"
            Column="29" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="381"
            Column="29" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="565"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="672"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="111"
            Column="17" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{559BA086-8171-4ED1-A14D-FCED69F05840}"
      DTS:EvalOp="1"
      DTS:Expression="@User::IsFileExists=true"
      DTS:From="Package\Import Loop"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Script Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="151,42"
          Id="Package\Data Flow Task"
          TopLeft="312.5,483.5" />
        <NodeLayout
          Size="131,42"
          Id="Package\Import Loop\Poll file"
          TopLeft="53,49" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="238,157"
          Size="238,200"
          Id="Package\Import Loop"
          TopLeft="131,200" />
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="734,289" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="369,300">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="365,10"
              Start="0,0"
              End="357.5,10">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="178.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="178.5,0"
                    Point2="182.5,0"
                    Point3="182.5,4" />
                  <mssgle:LineSegment
                    End="182.5,6" />
                  <mssgle:CubicBezierSegment
                    Point1="182.5,6"
                    Point2="182.5,10"
                    Point3="186.5,10" />
                  <mssgle:LineSegment
                    End="357.5,10" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="174.5,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="146,42"
          Id="Package\Data Flow Task\Lookup"
          TopLeft="172,135.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Data Flow Task\OLE DB Destination"
          TopLeft="60,238.5" />
        <NodeLayout
          Size="151,42"
          Id="Package\Data Flow Task\Flat File Source"
          TopLeft="79.5,60" />
        <NodeLayout
          Size="166,42"
          Id="Package\Data Flow Task\OLE DB Command"
          TopLeft="374,252.5" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup No Match Output]"
          TopLeft="222,177.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-76.5,61"
              Start="0,0"
              End="-76.5,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7967479674797" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.7967479674797"
                    Point2="0,24.7967479674797"
                    Point3="-4,24.7967479674797" />
                  <mssgle:LineSegment
                    End="-72.5,24.7967479674797" />
                  <mssgle:CubicBezierSegment
                    Point1="-72.5,24.7967479674797"
                    Point2="-76.5,24.7967479674797"
                    Point3="-76.5,28.7967479674797" />
                  <mssgle:LineSegment
                    End="-76.5,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-94.05638671875,29.7967479674797,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Lookup Match Output]"
          TopLeft="268,177.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="189,75"
              Start="0,0"
              End="189,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.4878048780488" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.4878048780488"
                    Point2="0,30.4878048780488"
                    Point3="4,30.4878048780488" />
                  <mssgle:LineSegment
                    End="185,30.4878048780488" />
                  <mssgle:CubicBezierSegment
                    Point1="185,30.4878048780488"
                    Point2="189,30.4878048780488"
                    Point3="189,34.4878048780488" />
                  <mssgle:LineSegment
                    End="189,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="46.30861328125,35.4878048780488,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Flat File Source Output]"
          TopLeft="155,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="90,33.5"
              Start="0,0"
              End="90,26">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.75"
                    Point2="0,16.75"
                    Point3="4,16.75" />
                  <mssgle:LineSegment
                    End="86,16.75" />
                  <mssgle:CubicBezierSegment
                    Point1="86,16.75"
                    Point2="90,16.75"
                    Point3="90,20.75" />
                  <mssgle:LineSegment
                    End="90,26" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Flow Task\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[TweetMain]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>